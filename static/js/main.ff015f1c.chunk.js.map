{"version":3,"sources":["components/Header.js","components/MemeGenerator.js","components/MemeApp.js","index.js"],"names":["Header","MemeGenerator","state","topText","bottomText","randomImage","allMemeImgs","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","randNum","Math","floor","random","length","randMemeImgUrl","url","fetch","then","response","json","data","memes","className","onSubmit","this","type","placeholder","onChange","src","alt","Component","MemeApp","ReactDOM","render","document","getElementById"],"mappings":"uLAUeA,EARA,WACb,OACE,gCACE,uD,0CC0DSC,E,2MA5DbC,MAAQ,CACNC,QAAS,GACTC,WAAY,GACZC,YAAa,iCACbC,YAAa,I,EAGfC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAc9BC,aAAe,SAAAL,GACbA,EAAEM,iBACF,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAW,EAAKhB,MAAMI,YAAYa,QAC5DC,EAAiB,EAAKlB,MAAMI,YAAYS,GAASM,IACvD,EAAKZ,SAAS,CAAEJ,YAAae,K,mFAdV,IAAD,OAClBE,MAAM,qCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OACZ,EAAKf,SAAS,CACZH,YAAakB,EAASE,KAAKC,a,+BAajC,OACE,yBAAKC,UAAU,kBACb,0BAAMC,SAAUC,KAAKjB,cACnB,2BACEkB,KAAK,OACLpB,KAAK,UACLqB,YAAY,eACZpB,MAAOkB,KAAK5B,MAAMC,QAClB8B,SAAUH,KAAKvB,eAEjB,2BACEwB,KAAK,OACLpB,KAAK,aACLqB,YAAY,kBACZpB,MAAOkB,KAAK5B,MAAME,WAClB6B,SAAUH,KAAKvB,eAEjB,6CAEF,yBAAKqB,UAAU,QACb,yBAAKM,IAAKJ,KAAK5B,MAAMG,YAAa8B,IAAI,KACtC,wBAAIP,UAAU,OAAOE,KAAK5B,MAAMC,SAChC,wBAAIyB,UAAU,UAAUE,KAAK5B,MAAME,kB,GAtDjBgC,aCWbC,EATC,WACd,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCHNC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,U","file":"static/js/main.ff015f1c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Simple meme generator</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MemeGenerator extends Component {\r\n  state = {\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    randomImage: \"https://i.imgflip.com/26am.jpg\",\r\n    allMemeImgs: []\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then(response => response.json())\r\n      .then(response =>\r\n        this.setState({\r\n          allMemeImgs: response.data.memes\r\n        })\r\n      );\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\r\n    const randMemeImgUrl = this.state.allMemeImgs[randNum].url;\r\n    this.setState({ randomImage: randMemeImgUrl });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"meme-container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"topText\"\r\n            placeholder=\"Add Top Text\"\r\n            value={this.state.topText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"bottomText\"\r\n            placeholder=\"Add Bottom Text\"\r\n            value={this.state.bottomText}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button>Generate</button>\r\n        </form>\r\n        <div className=\"meme\">\r\n          <img src={this.state.randomImage} alt=\"\" />\r\n          <h2 className=\"top\">{this.state.topText}</h2>\r\n          <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport MemeGenerator from \"./MemeGenerator\";\r\n\r\nconst MemeApp = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <MemeGenerator />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemeApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MemeApp from \"./components/MemeApp\";\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<MemeApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}